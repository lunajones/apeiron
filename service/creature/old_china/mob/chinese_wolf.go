package mob

import "github.com/lunajones/apeiron/lib/combat"

func NewChineseWolf() *Creature {
	log.Println("[Creature] Initializing chinese wolf...")
	c:= &Creature{
		ID:          lib.NewUUID(),
		Type:        Wolf,
		Level:       Normal,
		HP:          100,
		MaxHP: 100,
		Actions: []CreatureAction{
			ActionIdle,
			ActionWalk,
			ActionRun,
			ActionParry,
			ActionBlock,
			ActionJump,
			ActionSkill1,
			ActionSkill2,
			ActionSkill3,
			ActionSkill4,
			ActionSkill5,
			ActionCombo1,
			ActionCombo2,
			ActionCombo3,
			ActionDie,
		},
		CurrentAction:           ActionIdle,
		AIState:                 AIStateIdle,
		LastStateChange:         time.Now(),
		DynamicCombos:           make(map[CreatureAction][]CreatureAction),
		IsAlive:                 true,
		IsCorpse:                false,
		RespawnTimeSec:          30,
		SpawnPoint:              position.Position{X: 0, Y: 0, Z: 0},
		SpawnRadius:             5.0,
		FieldOfViewDegrees:      120,
		VisionRange:             15,
		HearingRange:            10,
		IsBlind:                 false,
		IsDeaf:                  false,
		DetectionRadius:         10.0,
		AttackRange:             2.5,
		SkillCooldowns:          make(map[CreatureAction]time.Time),
		AggroTable:              make(map[string]float64),
		MoveSpeed:               3.5,
		AttackSpeed:             1.2,
		Faction:                 "Monsters",
		IsHostile:               true,
		MaxPosture:              100,
		CurrentPosture:          100,
		PostureRegenRate:        1.5,
		PostureBreakDurationSec: 5,
		// Atributos de combate
		Strength:          20,
		Dexterity:         10,
		Intelligence:      5,
		Focus:             8,
		PhysicalDefense:   0.15,
		MagicDefense:      0.05,
		RangedDefense:     0.10,
		ControlResistance: 0.1,
		StatusResistance:  0.1,
		CriticalResistance: 0.2,
		CriticalChance:     0.05,
		Tags:        []CreatureTag{TagAnimal, TagPredator},
		Needs: []Need{
			{Type: NeedHunger, Value: 50, Threshold: 70},
			{Type: NeedThirst, Value: 50, Threshold: 70},
			{Type: NeedSleep, Value: 50, Threshold: 70},
		},
		MentalState: MentalStateCalm,
		CurrentRole: RoleNone,
	}

	c.Position = c.GenerateSpawnPosition()
	return c
}